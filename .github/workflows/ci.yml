name: SupervIA CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:17-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: supervia_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: |
          backend/db-service/package-lock.json
          backend/auth-service/package-lock.json
          backend/metrics-service/package-lock.json
          backend/notification-service/package-lock.json
          backend/ai-service/package-lock.json
          frontend/supervia/package-lock.json
    
    - name: Install dependencies
      run: |
        cd backend/db-service && npm install
        cd ../auth-service && npm install
        cd ../metrics-service && npm install
        cd ../notification-service && npm install
        cd ../ai-service && npm install
        cd ../../frontend/supervia && npm install
    
    # Tests désactivés temporairement (pas encore de suites de tests)
    - name: Run backend tests (disabled)
      if: ${{ false }}
      run: |
        cd backend/db-service && npm test
        cd ../auth-service && npm test
        cd ../metrics-service && npm test
        cd ../notification-service && npm test
        cd ../ai-service && npm test
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/supervia_test
        JWT_SECRET: test-secret
        INTERNAL_API_KEY: test-internal-key
    
    - name: Run frontend tests (disabled)
      if: ${{ false }}
      run: |
        cd frontend/supervia && npm test
      env:
        CI: true

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build and test Docker images
      run: |
        docker compose build
        docker compose up -d postgres
        sleep 10
        docker compose up -d db-service
        sleep 5
        docker compose up -d auth-service metrics-service notification-service ai-service
        sleep 5
        docker compose up -d frontend
        sleep 10
        
        # Test health endpoints
        curl -f http://localhost:3001/health || exit 1
        curl -f http://localhost:3002/health || exit 1
        curl -f http://localhost:3003/health || exit 1
        curl -f http://localhost:3004/health || exit 1
        curl -f http://localhost:3005/health || exit 1
        
        docker compose down

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run security audit
      run: |
        cd backend/db-service && npm audit --audit-level moderate
        cd ../auth-service && npm audit --audit-level moderate
        cd ../metrics-service && npm audit --audit-level moderate
        cd ../notification-service && npm audit --audit-level moderate
        cd ../ai-service && npm audit --audit-level moderate
        cd ../../frontend/supervia && npm audit --audit-level moderate

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: |
          frontend/supervia/package-lock.json
    
    - name: Install dependencies
      run: |
        cd frontend/supervia && npm install
    
    - name: Run ESLint
      run: |
        cd frontend/supervia && npm run lint 