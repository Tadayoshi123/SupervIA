---
description: SupervIA Final Project (2025) ‚Äî MVP, Lean & Smart
version: 1.0
name: SupervIA Final Project
globs: 
  - frontend/**
  - backend/**
  - infra/**
  - .cursor/rules/supervia.mdc
  - CHECKLIST.md
  - README.md
alwaysApply: true
---

// .cursorrules ‚Äî SupervIA (2025) ‚Äî MVP Lean, RNCP Ready

// üåç CONTEXTE
// CMS-like IT supervision portal‚ÄØ: dashboards drag & drop, unified AI, search, PDF export, notifications, Zabbix (MVP).
// Stack‚ÄØ: modulaire, s√©curis√©e, on-premise, docs & process pro, focus maintenance/√©volution.

// FRONTEND
- Next.js (App Router, React 19+), Redux Toolkit, Tailwind, shadcn/ui, dnd-kit (D&D), FlexSearch (search), jsPDF (PDF)
- JWT auth, protected routes, RGAA/ARIA, Cypress, ESLint/Prettier, light/dark, Zabbix metrics via backend, react-toastify

// BACKEND
- Node.js LTS (2025+), Express.js (conventions unifi√©es)
- Prisma + PostgreSQL unique
- OAuth2/JWT (Google, GitHub, local)
- Zabbix API connector
- OpenAI SDK (ai-service, GPT-4o-mini+), Nodemailer, socket.io
- dotenv, Helmet, CORS, rate-limit
- Jest (unit tests), Swagger/OpenAPI (/docs), endpoints `/health` & `/metrics`
- Dockerfile (node:latest)

// INFRA
- Docker Compose (all services, postgres, zabbix, pgadmin), healthchecks, .env, README

// STRUCTURE
- frontend/, backend/[service]/, infra/
- /src/ + Dockerfile + README per service
- /src/routes/, /controllers/, /services/, /models/, /middleware/, swagger.json, index.js everywhere

// CI/CD
- Docker Compose, GitHub Actions sample, env management, healthchecks

// üìù EXIGENCES RNCP B2/B4 (must-have)
- Docs et changelog/bugtracker √† jour
- D√©pendances √† jour, alertes vuln√©rabilit√©s, process bugs clair
- Tous endpoints health/metrics expos√©s + monitoring/log
- RGPD, RGAA, OWASP √† chaque √©tape
- Factorisation/reuse toujours avant cr√©ation
- Tests et recette document√©s

// üí° BEST PRACTICES
- V√©rifie feature existante avant ajout/modif (cross-service)
- Propose plan rapide avant code
- Minimise duplication, favorise factorisation
- Code & doc clairs, pas de ‚Äúfull dump‚Äù inutile
- 1 test min/feature majeure, package.json update si nouvelle d√©pendance
- Structure, s√©curit√© et accessibilit√© partout

// ‚ö° POWERSHELL par d√©faut si shell, V0 √† V3 (simple = d√©faut)

// END
